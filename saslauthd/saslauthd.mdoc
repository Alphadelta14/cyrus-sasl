.\" $Id: saslauthd.mdoc,v 1.10 2002/05/28 19:06:12 rjs3 Exp $
.\" Copyright 1997-2001 Messaging Direct Ltd. All rights reserved.
.\"
.\" This manpage uses the BSD mdoc manpage macros. Please don't
.\" downgrade it to -man. The -mdoc macros are included with
.\" GNU roff, and, of course, with the BSD distributions.
.\"
.\" To make life easier for sites that don't support -mdoc,
.\" please generate (and commit!) an updated pre-formatted
.\" manpage in saslauthd.8 whenever you change this source
.\" version. Only the pre-formatted manpage is installed.
.\"
.Dt SASLAUTHD 8
.Os "CMU-SASL"
.Sh NAME
.Nm saslauthd
.Nd sasl authentication server
.Sh SYNOPSIS
.Nm
.Fl a
.Ar authmech
.Op Fl \&Tv
.Op Fl O Ar option
.Op Fl m Ar mux_path
.Op Fl n Ar threads
.Sh DESCRIPTION
.Nm
is a daemon process that handles plaintext authentication requests
on behalf of the SASL library.
.Pp
The server fulfills two roles: it isolates all code requiring superuser
privileges into a single process, and it can be used to provide
.Em proxy
authentication services to clients that do not understand
SASL based authentication.
.Pp
.Nm
should be
started from the system boot scripts when going to
multi-user mode. When running against a protected authentication
database (e.g. the
.Li shadow
mechanism),
it must be run as the superuser.
.Ss Options
Options named by lower\-case letters configure the server itself.
Upper\-case options control the behavior of specific authentication
mechanisms; their applicability to a particular authentication
mechanism is described in the
.Sx AUTHENTICATION MECHANISMS
section.
.Bl -tag -width indent
.It Fl a Ar authmech
Use
.Ar authmech
as the authentication mechanism. (See the
.Sx AUTHENTICATION MECHANISMS
section below.) This parameter is mandatory.
.It Fl O Ar option
A mechanism specific option (e.g. rimap hostname or config file path)
.It Fl H Ar hostname
The remote host to be contacted by the
.Li rimap
authentication mechanism. (Depricated, use -O instead)
.It Fl m Ar path
Use
.Ar path
as the pathname to the named socket to listen on for
connection requests. This must be an absolute pathname.
.It Fl n Ar threads
Use
.Ar threads
processes for responding to authentication queries. (default: 5)  A
value of zero will indicate that saslauthd should fork an individual
process for each connection.  This can solve leaks that occur in some
deployments.
.It Fl T
Honour time-of-day login restrictions.
.It Fl v
Print the version number and available authentication
mechanisms on standard error, then exit.
.El
.Ss Logging
.Nm
logs it's activities via
.Nm syslogd
using the
.Dv LOG_AUTH
facility.
.Sh AUTHENTICATION MECHANISMS
.Nm
supports one or more
.Qq authentication mechanisms ,
dependent upon the facilities provided by the underlying operating system.
The mechanism is selected by the
.Fl aho
flag from the following list of choices:
.Bl -tag -width "kerberos4"
.It Li dce
.Em (AIX)
.Pp
Authenticate using the DCE authentication environment.
.It Li getpwent
.Em (All platforms)
.Pp
Authenticate using the
.Fn getpwent
library function. Typically this authenticates against the
local password file. See your systems
.Xr getpwent 3
man page for details.
.It Li kerberos4
.Em (All platforms)
.Pp
Authenticate against the local Kerberos 4 realm. (See the
.Sx NOTES
section for caveats about this driver.)
.It Li kerberos5
.Em (All platforms)
.Pp
Authenticate against the local Kerberos 5 realm.
.It Li pam
.Em (Linux, Solaris)
.Pp
Authenticate using Pluggable Authentication Modules (PAM).
.It Li rimap
.Em (All platforms)
.Pp
Forward authentication requests to a remote IMAP server. This driver
connects to a remote IMAP server, specified using the -O flag,
and attempts to login (via an IMAP
.Ql LOGIN
command) using the credentials 
supplied to the local
server. If the remote authentication succeeds the local connection
is also considered to be authenticated. The remote connection is closed
as soon as the tagged response from the
.Ql LOGIN
command is received from the remote
server.
.Pp
The
.Ar option
parameter to the
.Fl O
flag describes the remote server to forward
authentication requests to.
.Ar hostname
can be a hostname (imap.example.com) or a dotted\-quad IP address
(192.168.0.1). The latter is useful if the remote server is
multi\-homed and has network interfaces that are unreachable from
the local IMAP server. The remote host is contacted on the
.Ql imap
service port. A non\-default port can be specified by appending
a slash and the port name or number
to the
.Ar hostname
argument.
.Pp
The
.Fl O
flag and argument are mandatory when using the
.Li rimap
mechanism.
.It Li shadow
.Em (AIX, Irix, Linux, Solaris)
.Pp
Authenticate against the local
.Qq shadow password file .
The exact mechanism is system dependent.
.Nm
currently understands the
.Fn getspnam
and
.Fn getuserpw
library routines. Some systems
honour the
.Fl T
flag.
.It Li ldap
.Em (All platforms that support OpenLDAP 2.0 or higher)
.Pp
Authenticate against an ldap server.  The ldap configuration parameters
are read from /usr/local/etc/saslauthd.conf.  The location of this file
can be changed with the -O parameter. See the LDAP NOTES section for the
list of available parameters.
.It Li sasldb
.Em (All platforms)
.Pp
Authenticate against the
SASL authentication database.  Note that this is probabally not what you
want to be using, and is even disabled at compile-time by default.
If you want to use sasldb with the SASL library, you probably want to
use the pwcheck_method of "auxprop" along with the sasldb auxprop plugin
instead.
.It Li sia
.Em (Digital UNIX)
.Pp
Authenticate using the Digital
.Ux
Security Integration Architecture
(a.k.a.
.Qq enhanced security ) .
.El
.Sh NOTES
The
.Li kerberos4
authentication driver consumes considerable resources. To perform an
authentication it must obtain a ticket granting ticket
from the TGT server
.Sy on every authentication request.
The Kerberos library routines that obtain the TGT also create a
local ticket file, on the reasonable assumption that you will want
to save the TGT for use by other Kerberos applications. These ticket
files are unusable by
.Nm No ,
however there is no way not to create them. The overhead of creating
and removing
these ticket files can cause serious performance degradation on busy
servers. (Kerberos
was never intended to be used in this manner, anyway.)
.Sh LDAP NOTES
The following are available ldap parameters.  There are quite a few of those, but only ldap_servers may need to be specified. The defaults for all other parameters are adequate for most installation.  For best performance ensure that the attributes specified in ldap_filter are indexed.  You can also experiment with the client side caching.  This can be a significant performance gain.  Use the client side caching with caution because it still an experimental OpenLDAP call.
.Bl -tag -width indent
.It ldap_servers: <ldap://localhost/>
.Pp
Specify LDAP servers using uri format. e.g ldap://10.1.1.2/.  You can specify multiple servers separated by a space.
.It ldap_bind_dn: <none>
.Pp
The distinguished name to bind to the ldap server(s).
.It ldap_bind_pw: <none>
.Pp
The password for the distinguished name above.
.It ldap_version: <3> <2|3>
.Pp
The LDAP version to use.
.It ldap_timeout: <5>
.Pp
The number of seconds a search can take before timing out.
.It ldap_timelimit: <5>
.Pp
The number of seconds that should be spent answering a search request.
.It ldap_deref: <none> <search|find|always|never>
.Pp
Determines how aliases are handled during a search.
.It ldap_referals: <no>
.Pp
Determines whether or not the client should follow referrals.
.It ldap_restart: <yes>
.Pp
Determines whether LDAP I/O operations are automatically restarted if they abort prematurely.
.It ldap_cache_expiry: <0>
.Pp
Non zero enables client side caching.  Cached results will expire after this
many seconds, e.g. 30.  Use this option with care.  OpenLDAP folks consider
this feature experimental.
.It ldap_cache_size: <0>
.Pp
If the client side caching is enabled, this is its size in bytes. e.g. 32768.
.It ldap_scope: <sub> <sub|one|base>
.Pp
The search scope.
.It ldap_search_base: <none>
.Pp
The base at which to conduct the search. e.g. o=example.com.
.It ldap_auth_method: <bind> <bind|custom>
.Pp
Specify an authentication method.  The default bind method uses
LDAP simple bind facility to very the password.  The custom method 
uses userPassword attribute to verify the password.  Currently,
{CRYPT} hash in supported.
.It ldap_filter: <uid=%u>
.Pp
Specify a filter.  Use the %u and %r tokens for the username and 
realm substitution.  The %u token has to be used at minimum for
the filter to be useful.  If ldap_auth_method is bind, the filter
will search for the distingushed name.  Otherwise, the search will
look for the userPassword attribute.
.It ldap_debug: <0>
.Pp
What level to set for debugging in the OpenLDAP libraries.	
See ldap_set_option(3) for more (LDAP_OPT_DEBUG_LEVEL).
.It ldap_verbose: <no>
.Pp
Log additional information to auth.info syslog facility.  This 
should be used for debugging purposes only.
.It ldap_ssl: <no>
.Pp
Connect to LDAPS typically via port 636.
.It ldap_start_tls: <no>
.Pp
Force start_tls mechanism through the normal LDAP port.  If both 
ldap_ssl and ldap_start_tls are yes, ldap_start_tls will be used.
.It ldap_tls_checkpeer: <no>
.Pp
Require and verify server certificate.  If this option is yes,
you must specify ldap_tls_cacertfile or ldap_tls_cacertdir.
.It ldap_tls_cacertfile: <none>
.Pp
CA certificate for server certificate verification.
.It ldap_tls_cacertdir: <none>
.Pp
Path to directory with certificates of CAs.
.It ldap_tls_ciphers: <DEFAULT>
.Pp
The list of SSL/TLS ciphers to allow.  The format of the string is
described in ciphers(1).
.It ldap_tls_cert: <none>
.Pp
File containing the client certificate.
.It ldap_tls_key: <none>
.Pp
File containing the client key.
.El
.Sh FILES
.Bl -tag -width "/var/run/saslauthd/mux"
.It Pa /var/run/saslauthd/mux
The default communications socket.
.El
.Bl -tag -width "/usr/local/etc/saslauthd.conf"
.It Pa /usr/local/etc/saslauthd.conf
The default configuration file (not used by all mechanisms).
.El
.Sh SEE ALSO
.Xr passwd 1 ,
.Xr getpwent 3 ,
.Xr getspnam 3 ,
.Xr getuserpw 3 ,
.Xr sasl_checkpass 3
.Xr sia_authenticate_user 3 ,
