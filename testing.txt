Testing the CMU SASL Library with the included test applications
################################################################

The CMU SASL library comes with two small test programs: test-client,
and test-server.  Each of these programs dump base-64 SASL iterations
to STDOUT, and read the next iteration from STDIN.  Lines preceded by
"C: " are from the client, and from "S: " are from the server.


Testing anonymous
#################

Run the test server with no args:

% testserver

In another window, run the test client:

% testclient -m anonymous

Feed the test client the line of information generated by the test server
This line contains the list of mechanisms the server understands.  This will
cause the client to generate two lines of data.  The first line tells the
server it wants to use the ANONYMOUS mechanism, and the second is the first
iteration of data for the ANONYMOUS transaction.

When these two lines are fed into the server, it will tell you that the
client authenticated as 'anonymous', and send an encrypted string to the client.
(Due to the mechanism in use here, the string isn't really encrypted.)

Sample client output:

	C:\wincvs\sasl\win32\testclient\Debug>testclient -m anonymous
	Using mechanism anonymous
	Using userid anonymous
	Using service rcmd
	Local hostname: kryten
	Remote hostname: kryten
	Ready and waiting for server mechanisms.
	S: 0049 U0NSQU0tTUQ1IENSQU0tTUQ1IFBMQUlOIEFOT05ZTU9VUw==
	C: 0013 QU5PTllNT1VT
	C: 0025 YW5vbnltb3Vza3J5dGVuAA==
	Authentication complete.
	Waiting for encrypted test string from server.
	S: 0053 SWYgeW91IHJlY2VpdmUgdGhpcywgZXZlcnl0aGluZyB3b3JrZWQu
	Received 39 bytes: 'If you receive this, everything worked.'
	Decoded 39 bytes: 'If you receive this, everything worked.'
	Exiting.

Sample server output:

	C:\wincvs\sasl\win32\testserver\Debug>testserver
	Using service rcmd
	S: 0049 U0NSQU0tTUQ1IENSQU0tTUQ1IFBMQUlOIEFOT05ZTU9VUw==
	C: 0013 QU5PTllNT1VT
	C: 0025 YW5vbnltb3Vza3J5dGVuAA==
	Authenticated as 'anonymous'
	Sending for encrypted test string to client.
	S: 0053 SWYgeW91IHJlY2VpdmUgdGhpcywgZXZlcnl0aGluZyB3b3JrZWQu
	Exiting.


Testing kerberosv4
##################

Run the test server, using the -s arg to set the service ticket to use.

% testserver -s rcmd


In another window, run the test client, using the following 4 args:

-u: user to authenticate
-s: service to use
-r: name of remote host
-m: set the mechanism to kerberos_v4

% testclient -u ryan -s rcmd -r lister.net.cmu.edu -m KERBEROS_V4

Feed the test client the information generated by the test server, and vice-versa.

After the authentication phase, an encrypted string is sent from the server to
the client.  If you decrypt it correctly, everything worked.

Sample client output:

	C:\wincvs\sasl\win32\testclient\Debug>testclient -u ryan -r lister.net.cmu.edu -m KERBEROS_V4
	Using mechanism KERBEROS_V4
	Using userid ryan
	Using service rcmd
	Local hostname: kryten
	Remote hostname: lister.net.cmu.edu
	Ready and waiting for server mechanisms.
	S: 0065 UExBSU4gQU5PTllNT1VTIEtFUkJFUk9TX1Y0IFNDUkFNLU1ENSBDUkFNLU1ENQ==
	C: 0017 S0VSQkVST1NfVjQ=
	C: 0001
	S: 0009 8AEcqg==
	C: 0145 BAcCQU5EUkVXLkNNVS5FRFUAOCB1oh13hVEFNJoG+KTEzEkf7TZZNLBWUeqvz4QtRsqPkHzLL8MTiSvnTm1sM6FZoQSDHMzbcao3/uY6muDncOe6i6fkqr5MoLg3Q0+tkRlBi09u8dT8o74K
	S: 0013 YTznmq6SOko=
	C: 0025 eP6ygDKCAuTiCzTlW/4kMw==
	Authentication complete.
	Waiting for encrypted test string from server.
	S: 0089 AAAAPgQMAAAAOJQhsteuaZ3VVdihQxB0fKTBARqcatsBR/LIX2gR7f1kPNc1jGzOuIIcBKkBho2TtiVGY043nkV1
	Received 66 bytes: ''
	Decoded 39 bytes: 'If you receive this, everything worked.'
	Exiting.

Sample server output:

	% test-server -s rcmd
	Using service rcmd
	S: 0065 UExBSU4gQU5PTllNT1VTIEtFUkJFUk9TX1Y0IFNDUkFNLU1ENSBDUkFNLU1ENQ==
	C: 0017 S0VSQkVST1NfVjQ=
	C: 0001 
	S: 0009 8AEcqg==
	C: 0145 BAcCQU5EUkVXLkNNVS5FRFUAOCB1oh13hVEFNJoG+KTEzEkf7TZZNLBWUeqvz4QtRsqPkHzLL8MTiSvnTm1sM6FZoQSDHMzbcao3/uY6muDncOe6i6fkqr5MoLg3Q0+tkRlBi09u8dT8o74K
	S: 0013 YTznmq6SOko=
	C: 0025 eP6ygDKCAuTiCzTlW/4kMw==
	Authenticated as 'ryan'
	Sending for encrypted test string to client.
	S: 0089 AAAAPgQMAAAAOJQhsteuaZ3VVdihQxB0fKTBARqcatsBR/LIX2gR7f1kPNc1jGzOuIIcBKkBho2TtiVGY043nkV1
	Exiting.

